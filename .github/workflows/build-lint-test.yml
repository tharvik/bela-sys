name: build, lint and test

on:
  push:

jobs:
  publish-github-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4

      - run: make image
      - run: sudo make sysroot.tar.gz

      - name: install qemu-user
        run: |
          sudo apt update
          sudo apt install qemu-user-static
          sudo ln /usr/bin/qemu-arm-static /usr/bin/qemu-arm
      - name: remove default binfmt
        run: |
          sudo apt install binfmt-support
          sudo update-binfmts --unimport
      - name: setup qemu-binfmt
        uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm/v7
          install: true

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}-cross

      - run: ls /proc/sys/fs/binfmt_misc/
      - run: cat /proc/sys/fs/binfmt_misc/qemu-arm
      - run: ldd /usr/bin/qemu-arm || true

      - uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-lint-test:
    needs: [publish-github-container]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: setup qemu-binfmt
        run: docker run --rm --privileged multiarch/qemu-user-static --reset

      - run: echo "${{ toJSON(needs.publish-github-container.outputs) }}"
      - name: use built container
        run: sed -i 's/^image = .*$/image = "${{ needs.publish-github-container.outputs.imageid }}"/' Cross.toml

      - run: cargo install cross
      - run: cross build --verbose
      - run: cross check --verbose
      - run: cross test --verbose
